swagger: "2.0"

info:
  version: 0.0.0
  title: Honeybee Server API
  description: A sample API definition for a honeybee server

schemes:
  - http
host: api.ladybug-tools.io
basePath: /api

paths:
  /hbsurface:
    get:
      summary: Get a list of hbsurface objects
      description: Retrieves a list of HoneyBee Surface objects for a given filter.
      tags:
        - Honeybee Surface
      parameters:
        - $ref: "#/parameters/SurfaceTypeParameter"
        - $ref: "#/parameters/SurfaceMaterialParameter"
        - $ref: "#/parameters/SurfaceStateParameter"
      responses:
        200:
          description: A list of hbsurfaces matching the query parameters
          schema:
            properties:
              results:
                type: array
                items:
                  properties:
                    uuid:
                      type: string
                    hbsurface:
                      $ref: "#/definitions/HBSurfaceSchema"

        404:
          description: Couldnt find any definitions matching your search query... :(
    post:
      summary: Create a new hbsurface object
      description: Adds a new hbsurface object to the list
      tags:
        - Honeybee Surface
      parameters:
        - in: body
          name: hbsurface
          description: A hbsurface JSON object
          required: true
          schema:
            $ref: "#/definitions/HBSurfaceSchema"
      responses:
        204:
          description: hbsurface succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create hbsurface... :(

  /hbsurface/{uuid}:
    parameters:
      - in: path
        name: uuid
        required: true
        description: The unique identifier of the hbsurface.
        type: string

    get:
      summary: Get a specific hbsurface object
      description: Returns a single hbsurface object
      tags:
        - Honeybee Surface
      responses:
        200:
          description: Succesfully returns the hbsurface
          schema:
            required:
              - uuid
              - hbsurface
            properties:
              uuid:
                type: string
              hbsurface:
                $ref: "#/definitions/HBSurfaceSchema"
        400:
          description: The uuid provided is invalid
        404:
          description: The hbsurface does not exist

    put:
      summary: Modify an existing hbsurface object
      description: Modifies any parameter (except uuid) of an hbsurface object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Honeybee Surface
      parameters:
        - in: body
          name: hbsurface
          description: A hbsurface JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/HBSurfaceSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string
    delete:
      summary: Delete an existing hbsurface object
      description: Delete an hbsurface object in the database specifying the uuid of the object
      tags:
        - Honeybee Surface
      responses:
        200:
          description: object succesfully deleted
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string
        404:
          description: object not found

parameters:
  SurfaceTypeParameter:
    in: query
    name: surface_type
    description: The type of the surface to be queried
    type: string
    enum: [wall, underground_wall, roof, underground_ceiling, floor, slab_on_grade, exposed_floor, ceiling, window, context]

  SurfaceMaterialParameter:
    in: query
    name: surface_material
    description: retrieve surfaces based on the name of their main material definiton (not materials in a given surface state)
    type: string

  SurfaceStateParameter:
    in: query
    name: surface_state
    description: retrieve a surface using the name of a given state it contains
    type: string

definitions:
  VertexSchema:
    type: array
    minimum: 3
    items:
      properties:
        x:
          type: number
        y:
          type: number
        z:
          type: number

  SurfacePropertySchema:
    properties:
      surface_type:
        type: number
        minimum: 0
        maximum: 6
        description: 0.0=Wall, 0.5=UndergroundWall, 1.0=Roof, 1.5=UndergroundCeiling, 2.0=Floor, 2.5=SlabOnGrade, 2.75=ExposedFloor, 3.0=Ceiling, 5.0=Window, 6.0=Context
      rad_properties:
        $ref: "#/definitions/MaterialSchema"

  SurfaceStateSchema:
    properties:
      name:
        type: string
        description: name of the state, usually default
      surface_properties:
        $ref: "#/definitions/SurfacePropertySchema"


  AnalysisSurfaceSchema:
    properties:
      name:
        type: string
        description: The name of the surface
      surface_type:
        type: number
        minimum: 0
        maximum: 6
        description: 0.0=Wall, 0.5=UndergroundWall, 1.0=Roof, 1.5=UndergroundCeiling, 2.0=Floor, 2.5=SlabOnGrade, 2.75=ExposedFloor, 3.0=Ceiling, 5.0=Window, 6.0=Context
      vertices:
        type: array
        items:
          $ref: "#/definitions/VertexSchema"
      rad_properties:
        properties:
          uuid:
            type: string
          material:
            $ref: "#/definitions/MaterialSchema"
      surface_states:
        type: array
        items:
          $ref: "#/definitions/SurfaceStateSchema"

  HBSurfaceSchema:
    properties:
      parent_surface:
        $ref: "#/definitions/AnalysisSurfaceSchema"
      child_surfaces:
        type: array
        items:
          $ref: "#/definitions/AnalysisSurfaceSchema"
