swagger: "2.0"

info:
  version: 0.0.0
  title: Honeybee Server API
  description: A sample API definition for a honeybee server

schemes:
  - http
host: api.ladybug-tools.io
basePath: /api

paths:
  /recipe/:
    get:
      summary: Get a list of daylight recipe objects
      description: Retrieves a list of daylight recipe objects for a given filter.
      tags:
        - Get and Delete Recipes
      parameters:
      - $ref: "#/parametersSchema/RecipeTypeParameter"
      - $ref: "#/parametersSchema/RecipeLocationParameter"
      - $ref: "#/parametersSchema/RecipeStateParameter"
      responses:
        200:
          description: A list of analysis_grids matching the query parameters
          schema:
            properties:
              results:
                type: array
                items:
                  properties:
                    uuid:
                      type: string
                    recipe:
                      $ref: "#/definitions/GridBasedRecipeSchema"

        404:
          description: Couldn't find any definitions matching your search query... :(

  /recipe/{uuid}:
    parameters:
      - in: path
        name: uuid
        required: true
        description: The unique identifier of the analysis_grid.
        type: string

    get:
      summary: Get a specific analysis_grid object
      description: Returns a single analysis_grid object
      tags:
        - Get and Delete Recipes
      responses:
        200:
          description: Succesfully returns the recipe
          schema:
            $ref: "#/definitions/GridBasedRecipeSchema"
        400:
          description: The uuid provided is invalid
        404:
          description: The analysis_grid does not exist

    delete:
      summary: Delete an existing recipe object
      description: Delete an recipe object in the database specifying the uuid of the object
      tags:
        - Get and Delete Recipes
      responses:
        200:
          description: object succesfully deleted
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string
        404:
          description: object not found

# DAYLIGHT FACTOR RECIPE
  /recipe/daylight_factor/gridbased:
    post:
      summary: Create a new analysis_grid object
      description: Adds a new analysis_grid object to the list
      tags:
        - Daylight Factor Recipe
      parameters:
        - in: body
          name: recipe
          description: A analysis_grid JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/DaylightFactorGridBasedSchema"

      responses:
        204:
          description: daylight_factor recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create analysis_grid... :(

  /recipe/daylight_factor/gridbased/{uuid}:
    put:
      summary: Modify an existing analysis_grid object
      description: Modifies any parameter (except uuid) of a daylight_factor recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Daylight Factor Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the daylight_factor recipe.
          type: string
        - in: body
          name: recipe
          description: A analysis_grid JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/DaylightFactorGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

# DIRECT REFLECTION RECIPE
  /recipe/direct_reflection/gridbased:
    post:
      summary: Create a new direct_reflection object
      description: Adds a new direct_reflection object to the list
      tags:
        - Direct Reflection Recipe
      parameters:
        - in: body
          name: recipe
          description: A direct_reflection JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/DirectReflectionGridBasedSchema"

      responses:
        204:
          description: direct_reflection recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create analysis_grid... :(

  /recipe/direct_reflection/gridbased/{uuid}:
    put:
      summary: Modify an existing direct_reflection object
      description: Modifies any parameter (except uuid) of a direct_reflection recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Direct Reflection Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the direct_reflection recipe.
          type: string
        - in: body
          name: recipe
          description: A analysis_grid JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/DirectReflectionGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

# SOLAR ACCESS RECIPE
  /recipe/solar_access/gridbased:
    post:
      summary: Create a new solar_access object
      description: Adds a new solar_access object to the list
      tags:
        - Solar Access Recipe
      parameters:
        - in: body
          name: recipe
          description: A solar_access JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/SolarAccessGridBasedSchema"

      responses:
        204:
          description: solar_access recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create analysis_grid... :(

  /recipe/solar_access/gridbased/{uuid}:
    put:
      summary: Modify an existing solar_access object
      description: Modifies any parameter (except uuid) of a solar_access recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Solar Access Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the solar_access recipe.
          type: string
        - in: body
          name: recipe
          description: A solar_access JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/SolarAccessGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string


# POINT IN TIME RECIPE
  /recipe/point_in_time/gridbased:
    post:
      summary: Create a new point_in_time object
      description: Adds a new point_in_time object to the list
      tags:
        - Point in Time Recipe
      parameters:
        - in: body
          name: recipe
          description: A point_in_time JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/PointInTimeGridBasedSchema"

      responses:
        204:
          description: point_in_time recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create point_in_time recipe... :(

  /recipe/point_in_time/gridbased/{uuid}:
    put:
      summary: Modify an existing point_in_time object
      description: Modifies any parameter (except uuid) of a point_in_time recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Point in Time Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the point_in_time recipe.
          type: string
        - in: body
          name: recipe
          description: A analysis_grid JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/PointInTimeGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

# ANNUAL RECIPE
  /recipe/annual/gridbased:
    post:
      summary: Create a new annual object
      description: Adds a new annual object to the list
      tags:
        - Annual Recipe
      parameters:
        - in: body
          name: recipe
          description: A annual JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/AnnualGridBasedSchema"

      responses:
        204:
          description: annual recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create annual... :(

  /recipe/annual/gridbased/{uuid}:
    put:
      summary: Modify an existing annual object
      description: Modifies any parameter (except uuid) of a annual recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Annual Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the annual recipe.
          type: string
        - in: body
          name: recipe
          description: A annual JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/AnnualGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

# RADIATION RECIPE
  /recipe/radiation/gridbased:
    post:
      summary: Create a new radiation object
      description: Adds a new radiation object to the list
      tags:
        - Radiation Recipe
      parameters:
        - in: body
          name: recipe
          description: A radiation JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/RadiationGridBasedSchema"

      responses:
        204:
          description: radiation recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create analysis_grid... :(

  /recipe/radiation/gridbased/{uuid}:
    put:
      summary: Modify an existing radiation object
      description: Modifies any parameter (except uuid) of a radiation recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Radiation Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the radiation recipe.
          type: string
        - in: body
          name: recipe
          description: A radiation JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/RadiationGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

# THREE PHASE RECIPE
  /recipe/three_phase/gridbased:
    post:
      summary: Create a new three_phase object
      description: Adds a new three_phase object to the list
      tags:
        - Three Phase Recipe
      parameters:
        - in: body
          name: recipe
          description: A three_phase JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/ThreePhaselGridBasedSchema"

      responses:
        204:
          description: three_phase recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create analysis_grid... :(

  /recipe/three_phase/gridbased/{uuid}:
    put:
      summary: Modify an existing three_phase object
      description: Modifies any parameter (except uuid) of a three_phase recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Three Phase Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the three_phase recipe.
          type: string
        - in: body
          name: recipe
          description: A three_phase JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/ThreePhaselGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

# FIVE PHASE RECIPE
  /recipe/five_phase/gridbased:
    post:
      summary: Create a new five_phase object
      description: Adds a new five_phase object to the list
      tags:
        - Five Phase Recipe
      parameters:
        - in: body
          name: recipe
          description: A five_phase JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/FivePhaselGridBasedSchema"

      responses:
        204:
          description: five_phase recipe succesfully created.
          schema:
            properties:
              uuid:
                type: string
                example: 1a390fe5-9b53-4c52-9ecb-aa2f9633babd
        400:
          description: Could not create five_phase... :(

  /recipe/five_phase/gridbased/{uuid}:
    put:
      summary: Modify an existing five_phase object
      description: Modifies any parameter (except uuid) of a five_phase recipe object by completely replacing the definition object. A finer grain method can be set up later.
      tags:
        - Five Phase Recipe
      parameters:
        - in: path
          name: uuid
          required: true
          description: The unique identifier of the five_phase recipe.
          type: string
        - in: body
          name: recipe
          description: A five_phase JSON objectr with a uuid key.
          required: true
          schema:
            $ref: "#/definitions/FivePhaselGridBasedSchema"

      responses:
        200:
          description: Everything went smooth and well
        400:
          description: Bad request, something went wrong... :(
          schema:
            properties:
              error:
                type: string

parametersSchema:

  RecipeTypeParameter:
    name: type
    in: query
    description: The type of recipe to be retrieved
    type: string
    enum: [daylight_factor, direct_reflection, solar_access, point_in_time, annual, radiation, three_phase, five_phase]

  RecipeLocationParameter:
    name: location
    in: query
    description: The location where the weather sky is generated from (can be country or city, will only work for climate based recipes)
    type: string

  RecipeStateParameter:
    name: state
    in: query
    description: The state of the recipe on the server (whether it has run, is running, has failed or is on hold)
    type: string
    enum: [success, fail, running, waiting]

definitions:

  HoyListSchema:
    type: array
    description: A list of hours of the year
    items:
      type: integer
      description: min key value 0 and max key value 8760

  AnalysisType:
    type: integer
    enum: [0,1,2]
    description: 0 - illuminance(lux), 1 - radiation (kwh), 2 - luminance (Candela)

  RadianceParameters:
    type: string
    description: A standard radiance parameter string
    example: -ab 5 -aa 0.05 -ar 128

  SkySchema:
    properties:
      location:
        $ref: "#/definitions/EpwLocationSchema"
      hour:
        type: integer
        description: hour of the day - minvalue 0 and max value 23
      day:
        type: integer
        description: day of the month - minvalue 1 and max value 31
      month:
        type: integer
        description: month of the year - minvalue 1 and max value 12
      north:
        type: number
        description: angle in degrees between 0-360 to indicate North
      sky_type:
        type: integer
        enum: [0,1,2,3,4,5]
        description: 0 - Sunny with sun, 1 - sunny without sun, 2 - intermediate with sun, 3 - intermediate without sun, 4 - cloudy sky, 5 - uniform sky

  SkyMtxSchema:
    properties:
      wea:
        $ref: "#/definitions/WeaSchema"
      sky_density:
        type: integer
        enum: [1,2]
        description: 1 - Tregenza Sky, 2 - Reinhart Sky, etc. (Default - 1)
      north:
        type: number
        minimum: 0
        maximum: 360
        description: angle in degrees between 0-360 to indicate North
      hoys:
        $ref: "#/definitions/HoyListSchema"
      mode:
        type: integer
        enum: [0,1,2]
        description: sky mode
      suffix:
        type: string
        description: Suffix for the sky matrix


  GridBasedRecipeSchema:
    properties:
      uuid:
        description: The unique identifier of the recipe
        type: string
      recipe:
        type: object
    example:
      uuid: 709116b8-d71e-4d50-bb54-216e83ad9f3f
      recipe:
        id: annual
        type: gridbased
        sky_mtx:
          wea: wea Json object
          sky_density: 1
          north: 0
          mode: 2
          suffix: null
        analysis_grids: [list of analysis grids]
        surfaces: [list of surfaces]
        analysis_type: 2
        rad_parameters: -ab 5 -aa 0.05 -ar 128

  DaylightFactorGridBasedSchema:
    properties:
      id:
        type: string
        enum: [daylight_factor]
      type:
        type: string
        enum: [gridbased]
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      rad_parameters:
        $ref: "#/definitions/RadianceParameters"


  DirectReflectionGridBasedSchema:
    properties:
      id:
        type: string
        enum: [direct_reflection]
      type:
        type: string
        enum: [gridbased]
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      location:
        $ref: "#/definitions/EpwLocationSchema"
      hoys:
        $ref: "#/definitions/HoyListSchema"
      sun_vectors:
        type: array
        description: A list of vectors if location is not provided
        items:
          $ref: "#/definitions/VectorSchema"

  SolarAccessGridBasedSchema:
    properties:
      id:
        type: string
        enum: [solar_access]
      type:
        type: string
        enum: [gridbased]
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      location:
        $ref: "#/definitions/EpwLocationSchema"
      hoys:
        $ref: "#/definitions/HoyListSchema"
      sun_vectors:
        type: array
        description: A list of vectors if location is not provided
        items:
          $ref: "#/definitions/VectorSchema"

  PointInTimeGridBasedSchema:
    properties:
      id:
        type: string
        enum: [point_in_time]
      type:
        type: string
        enum: [gridbased]
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      sky:
        $ref: "#/definitions/SkySchema"
      analysis_type:
        $ref: "#/definitions/AnalysisType"
      rad_parameters:
        $ref: "#/definitions/RadianceParameters"

  AnnualGridBasedSchema:
    example:
      id: annual
      type: gridbased
      sky_mtx:
        wea: wea Json object
        sky_density: 1
        north: 0
        mode: 2
        suffix: null
      analysis_grids:
        type: array
        items:
          analysis_grid: an analysis grid Json object
      surfaces:
        type: array
        items:
          surface: an surface Json object
      analysis_type: 2
      rad_parameters: -ab 5 -aa 0.05 -ar 128
    properties:
      id:
        type: string
        enum: [annual]
      type:
        type: string
        enum: [gridbased]
      sky_mtx:
        $ref: "#/definitions/SkyMtxSchema"
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      analysis_type:
        $ref: "#/definitions/AnalysisType"
      rad_parameters:
        $ref: "#/definitions/RadianceParameters"

  RadiationGridBasedSchema:
    properties:
      id:
        type: string
        enum: [radiation]
      type:
        type: string
        enum: [gridbased]
      sky_mtx:
        $ref: "#/definitions/SkyMtxSchema"
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      rad_parameters:
        $ref: "#/definitions/RadianceParameters"

  ThreePhaselGridBasedSchema:
    properties:
      id:
        type: string
        enum: [three_phase]
      type:
        type: string
        enum: [gridbased]
      sky_mtx:
        $ref: "#/definitions/SkyMtxSchema"
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      analysis_type:
        $ref: "#/definitions/AnalysisType"
      view_mtx_parameters:
        $ref: "#/definitions/RadianceParameters"
      daylight_mtx_parameters:
        $ref: "#/definitions/RadianceParameters"

  FivePhaselGridBasedSchema:
    properties:
      id:
        type: string
        enum: [five_phase]
      type:
        type: string
        enum: [gridbased]
      sky_mtx:
        $ref: "#/definitions/SkyMtxSchema"
      analysis_grids:
        type: array
        items:
          $ref: "#/definitions/AnalysisGridSchema"
      surfaces:
        type: array
        items:
          $ref: "#/definitions/HBSurfaceSchema"
      analysis_type:
        $ref: "#/definitions/AnalysisType"
      view_mtx_parameters:
        $ref: "#/definitions/RadianceParameters"
      daylight_mtx_parameters:
        $ref: "#/definitions/RadianceParameters"
