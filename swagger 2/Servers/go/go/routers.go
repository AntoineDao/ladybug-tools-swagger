/*
 * Honeybee Server API
 *
 * A sample API definition for a honeybee server
 *
 * API version: 0.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/",
		Index,
	},

	Route{
		"AnalysisGridGet",
		strings.ToUpper("Get"),
		"/api/analysis_grid",
		AnalysisGridGet,
	},

	Route{
		"AnalysisGridPost",
		strings.ToUpper("Post"),
		"/api/analysis_grid",
		AnalysisGridPost,
	},

	Route{
		"AnalysisGridUuidDelete",
		strings.ToUpper("Delete"),
		"/api/analysis_grid/{uuid}",
		AnalysisGridUuidDelete,
	},

	Route{
		"AnalysisGridUuidGet",
		strings.ToUpper("Get"),
		"/api/analysis_grid/{uuid}",
		AnalysisGridUuidGet,
	},

	Route{
		"AnalysisGridUuidPut",
		strings.ToUpper("Put"),
		"/api/analysis_grid/{uuid}",
		AnalysisGridUuidPut,
	},

	Route{
		"RecipeAnnualGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/annual/gridbased",
		RecipeAnnualGridbasedPost,
	},

	Route{
		"RecipeAnnualGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/annual/gridbased/{uuid}",
		RecipeAnnualGridbasedUuidPut,
	},

	Route{
		"MaterialBsdfPost",
		strings.ToUpper("Post"),
		"/api/material/bsdf",
		MaterialBsdfPost,
	},

	Route{
		"MaterialBsdfUuidPut",
		strings.ToUpper("Put"),
		"/api/material/bsdf/{uuid}",
		MaterialBsdfUuidPut,
	},

	Route{
		"RecipeDaylightFactorGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/daylight_factor/gridbased",
		RecipeDaylightFactorGridbasedPost,
	},

	Route{
		"RecipeDaylightFactorGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/daylight_factor/gridbased/{uuid}",
		RecipeDaylightFactorGridbasedUuidPut,
	},

	Route{
		"RecipeDirectReflectionGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/direct_reflection/gridbased",
		RecipeDirectReflectionGridbasedPost,
	},

	Route{
		"RecipeDirectReflectionGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/direct_reflection/gridbased/{uuid}",
		RecipeDirectReflectionGridbasedUuidPut,
	},

	Route{
		"EpwGet",
		strings.ToUpper("Get"),
		"/api/epw",
		EpwGet,
	},

	Route{
		"EpwPost",
		strings.ToUpper("Post"),
		"/api/epw",
		EpwPost,
	},

	Route{
		"EpwUuidDelete",
		strings.ToUpper("Delete"),
		"/api/epw/{uuid}",
		EpwUuidDelete,
	},

	Route{
		"EpwUuidGet",
		strings.ToUpper("Get"),
		"/api/epw/{uuid}",
		EpwUuidGet,
	},

	Route{
		"EpwUuidPut",
		strings.ToUpper("Put"),
		"/api/epw/{uuid}",
		EpwUuidPut,
	},

	Route{
		"RecipeFivePhaseGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/five_phase/gridbased",
		RecipeFivePhaseGridbasedPost,
	},

	Route{
		"RecipeFivePhaseGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/five_phase/gridbased/{uuid}",
		RecipeFivePhaseGridbasedUuidPut,
	},

	Route{
		"MaterialGet",
		strings.ToUpper("Get"),
		"/api/material",
		MaterialGet,
	},

	Route{
		"MaterialUuidDelete",
		strings.ToUpper("Delete"),
		"/api/material/{uuid}",
		MaterialUuidDelete,
	},

	Route{
		"MaterialUuidGet",
		strings.ToUpper("Get"),
		"/api/material/{uuid}",
		MaterialUuidGet,
	},

	Route{
		"RecipeGet",
		strings.ToUpper("Get"),
		"/api/recipe/",
		RecipeGet,
	},

	Route{
		"RecipeUuidDelete",
		strings.ToUpper("Delete"),
		"/api/recipe/{uuid}",
		RecipeUuidDelete,
	},

	Route{
		"RecipeUuidGet",
		strings.ToUpper("Get"),
		"/api/recipe/{uuid}",
		RecipeUuidGet,
	},

	Route{
		"HbsurfaceGet",
		strings.ToUpper("Get"),
		"/api/hbsurface",
		HbsurfaceGet,
	},

	Route{
		"HbsurfacePost",
		strings.ToUpper("Post"),
		"/api/hbsurface",
		HbsurfacePost,
	},

	Route{
		"HbsurfaceUuidDelete",
		strings.ToUpper("Delete"),
		"/api/hbsurface/{uuid}",
		HbsurfaceUuidDelete,
	},

	Route{
		"HbsurfaceUuidGet",
		strings.ToUpper("Get"),
		"/api/hbsurface/{uuid}",
		HbsurfaceUuidGet,
	},

	Route{
		"HbsurfaceUuidPut",
		strings.ToUpper("Put"),
		"/api/hbsurface/{uuid}",
		HbsurfaceUuidPut,
	},

	Route{
		"MaterialLightSourcePost",
		strings.ToUpper("Post"),
		"/api/material/light_source",
		MaterialLightSourcePost,
	},

	Route{
		"MaterialLightSourceUuidPut",
		strings.ToUpper("Put"),
		"/api/material/light_source/{uuid}",
		MaterialLightSourceUuidPut,
	},

	Route{
		"MaterialOpaquePost",
		strings.ToUpper("Post"),
		"/api/material/opaque",
		MaterialOpaquePost,
	},

	Route{
		"MaterialOpaqueUuidPut",
		strings.ToUpper("Put"),
		"/api/material/opaque/{uuid}",
		MaterialOpaqueUuidPut,
	},

	Route{
		"RecipePointInTimeGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/point_in_time/gridbased",
		RecipePointInTimeGridbasedPost,
	},

	Route{
		"RecipePointInTimeGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/point_in_time/gridbased/{uuid}",
		RecipePointInTimeGridbasedUuidPut,
	},

	Route{
		"RecipeRadiationGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/radiation/gridbased",
		RecipeRadiationGridbasedPost,
	},

	Route{
		"RecipeRadiationGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/radiation/gridbased/{uuid}",
		RecipeRadiationGridbasedUuidPut,
	},

	Route{
		"RecipeSolarAccessGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/solar_access/gridbased",
		RecipeSolarAccessGridbasedPost,
	},

	Route{
		"RecipeSolarAccessGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/solar_access/gridbased/{uuid}",
		RecipeSolarAccessGridbasedUuidPut,
	},

	Route{
		"RecipeThreePhaseGridbasedPost",
		strings.ToUpper("Post"),
		"/api/recipe/three_phase/gridbased",
		RecipeThreePhaseGridbasedPost,
	},

	Route{
		"RecipeThreePhaseGridbasedUuidPut",
		strings.ToUpper("Put"),
		"/api/recipe/three_phase/gridbased/{uuid}",
		RecipeThreePhaseGridbasedUuidPut,
	},

	Route{
		"MaterialTranslucentPost",
		strings.ToUpper("Post"),
		"/api/material/translucent",
		MaterialTranslucentPost,
	},

	Route{
		"MaterialTranslucentUuidPut",
		strings.ToUpper("Put"),
		"/api/material/translucent/{uuid}",
		MaterialTranslucentUuidPut,
	},

	Route{
		"WeaGet",
		strings.ToUpper("Get"),
		"/api/wea",
		WeaGet,
	},

	Route{
		"WeaPost",
		strings.ToUpper("Post"),
		"/api/wea",
		WeaPost,
	},

	Route{
		"WeaUuidDelete",
		strings.ToUpper("Delete"),
		"/api/wea/{uuid}",
		WeaUuidDelete,
	},

	Route{
		"WeaUuidGet",
		strings.ToUpper("Get"),
		"/api/wea/{uuid}",
		WeaUuidGet,
	},

	Route{
		"WeaUuidPut",
		strings.ToUpper("Put"),
		"/api/wea/{uuid}",
		WeaUuidPut,
	},
}
