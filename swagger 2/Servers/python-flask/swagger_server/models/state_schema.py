# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.hoy_schema import HoySchema  # noqa: F401,E501
from swagger_server import util


class StateSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, state_id: str=None, state: List[HoySchema]=None):  # noqa: E501
        """StateSchema - a model defined in Swagger

        :param state_id: The state_id of this StateSchema.  # noqa: E501
        :type state_id: str
        :param state: The state of this StateSchema.  # noqa: E501
        :type state: List[HoySchema]
        """
        self.swagger_types = {
            'state_id': str,
            'state': List[HoySchema]
        }

        self.attribute_map = {
            'state_id': 'state_id',
            'state': 'state'
        }

        self._state_id = state_id
        self._state = state

    @classmethod
    def from_dict(cls, dikt) -> 'StateSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StateSchema of this StateSchema.  # noqa: E501
        :rtype: StateSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_id(self) -> str:
        """Gets the state_id of this StateSchema.

        The id of a given state for the source of light  # noqa: E501

        :return: The state_id of this StateSchema.
        :rtype: str
        """
        return self._state_id

    @state_id.setter
    def state_id(self, state_id: str):
        """Sets the state_id of this StateSchema.

        The id of a given state for the source of light  # noqa: E501

        :param state_id: The state_id of this StateSchema.
        :type state_id: str
        """

        self._state_id = state_id

    @property
    def state(self) -> List[HoySchema]:
        """Gets the state of this StateSchema.


        :return: The state of this StateSchema.
        :rtype: List[HoySchema]
        """
        return self._state

    @state.setter
    def state(self, state: List[HoySchema]):
        """Sets the state of this StateSchema.


        :param state: The state of this StateSchema.
        :type state: List[HoySchema]
        """

        self._state = state
