# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_collection_schema import DataCollectionSchema  # noqa: F401,E501
from swagger_server.models.epw_location_schema import EpwLocationSchema  # noqa: F401,E501
from swagger_server import util


class EpwSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, header: List[str]=None, location: EpwLocationSchema=None, data: List[DataCollectionSchema]=None):  # noqa: E501
        """EpwSchema - a model defined in Swagger

        :param header: The header of this EpwSchema.  # noqa: E501
        :type header: List[str]
        :param location: The location of this EpwSchema.  # noqa: E501
        :type location: EpwLocationSchema
        :param data: The data of this EpwSchema.  # noqa: E501
        :type data: List[DataCollectionSchema]
        """
        self.swagger_types = {
            'header': List[str],
            'location': EpwLocationSchema,
            'data': List[DataCollectionSchema]
        }

        self.attribute_map = {
            'header': 'header',
            'location': 'location',
            'data': 'data'
        }

        self._header = header
        self._location = location
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'EpwSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EpwSchema of this EpwSchema.  # noqa: E501
        :rtype: EpwSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header(self) -> List[str]:
        """Gets the header of this EpwSchema.


        :return: The header of this EpwSchema.
        :rtype: List[str]
        """
        return self._header

    @header.setter
    def header(self, header: List[str]):
        """Sets the header of this EpwSchema.


        :param header: The header of this EpwSchema.
        :type header: List[str]
        """
        if header is None:
            raise ValueError("Invalid value for `header`, must not be `None`")  # noqa: E501

        self._header = header

    @property
    def location(self) -> EpwLocationSchema:
        """Gets the location of this EpwSchema.


        :return: The location of this EpwSchema.
        :rtype: EpwLocationSchema
        """
        return self._location

    @location.setter
    def location(self, location: EpwLocationSchema):
        """Sets the location of this EpwSchema.


        :param location: The location of this EpwSchema.
        :type location: EpwLocationSchema
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")  # noqa: E501

        self._location = location

    @property
    def data(self) -> List[DataCollectionSchema]:
        """Gets the data of this EpwSchema.


        :return: The data of this EpwSchema.
        :rtype: List[DataCollectionSchema]
        """
        return self._data

    @data.setter
    def data(self, data: List[DataCollectionSchema]):
        """Sets the data of this EpwSchema.


        :param data: The data of this EpwSchema.
        :type data: List[DataCollectionSchema]
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data
