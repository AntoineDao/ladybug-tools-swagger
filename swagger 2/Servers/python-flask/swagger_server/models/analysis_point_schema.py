# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.point_schema import PointSchema  # noqa: F401,E501
from swagger_server.models.source_schema import SourceSchema  # noqa: F401,E501
from swagger_server.models.vector_schema import VectorSchema  # noqa: F401,E501
from swagger_server import util


class AnalysisPointSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, location: PointSchema=None, direction: VectorSchema=None, values: List[SourceSchema]=None):  # noqa: E501
        """AnalysisPointSchema - a model defined in Swagger

        :param location: The location of this AnalysisPointSchema.  # noqa: E501
        :type location: PointSchema
        :param direction: The direction of this AnalysisPointSchema.  # noqa: E501
        :type direction: VectorSchema
        :param values: The values of this AnalysisPointSchema.  # noqa: E501
        :type values: List[SourceSchema]
        """
        self.swagger_types = {
            'location': PointSchema,
            'direction': VectorSchema,
            'values': List[SourceSchema]
        }

        self.attribute_map = {
            'location': 'location',
            'direction': 'direction',
            'values': 'values'
        }

        self._location = location
        self._direction = direction
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'AnalysisPointSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalysisPointSchema of this AnalysisPointSchema.  # noqa: E501
        :rtype: AnalysisPointSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self) -> PointSchema:
        """Gets the location of this AnalysisPointSchema.


        :return: The location of this AnalysisPointSchema.
        :rtype: PointSchema
        """
        return self._location

    @location.setter
    def location(self, location: PointSchema):
        """Sets the location of this AnalysisPointSchema.


        :param location: The location of this AnalysisPointSchema.
        :type location: PointSchema
        """

        self._location = location

    @property
    def direction(self) -> VectorSchema:
        """Gets the direction of this AnalysisPointSchema.


        :return: The direction of this AnalysisPointSchema.
        :rtype: VectorSchema
        """
        return self._direction

    @direction.setter
    def direction(self, direction: VectorSchema):
        """Sets the direction of this AnalysisPointSchema.


        :param direction: The direction of this AnalysisPointSchema.
        :type direction: VectorSchema
        """

        self._direction = direction

    @property
    def values(self) -> List[SourceSchema]:
        """Gets the values of this AnalysisPointSchema.


        :return: The values of this AnalysisPointSchema.
        :rtype: List[SourceSchema]
        """
        return self._values

    @values.setter
    def values(self, values: List[SourceSchema]):
        """Sets the values of this AnalysisPointSchema.


        :param values: The values of this AnalysisPointSchema.
        :type values: List[SourceSchema]
        """

        self._values = values
