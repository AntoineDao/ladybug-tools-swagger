# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.surface_property_schema import SurfacePropertySchema  # noqa: F401,E501
from swagger_server import util


class SurfaceStateSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, surface_properties: SurfacePropertySchema=None):  # noqa: E501
        """SurfaceStateSchema - a model defined in Swagger

        :param name: The name of this SurfaceStateSchema.  # noqa: E501
        :type name: str
        :param surface_properties: The surface_properties of this SurfaceStateSchema.  # noqa: E501
        :type surface_properties: SurfacePropertySchema
        """
        self.swagger_types = {
            'name': str,
            'surface_properties': SurfacePropertySchema
        }

        self.attribute_map = {
            'name': 'name',
            'surface_properties': 'surface_properties'
        }

        self._name = name
        self._surface_properties = surface_properties

    @classmethod
    def from_dict(cls, dikt) -> 'SurfaceStateSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SurfaceStateSchema of this SurfaceStateSchema.  # noqa: E501
        :rtype: SurfaceStateSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this SurfaceStateSchema.

        name of the state, usually default  # noqa: E501

        :return: The name of this SurfaceStateSchema.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SurfaceStateSchema.

        name of the state, usually default  # noqa: E501

        :param name: The name of this SurfaceStateSchema.
        :type name: str
        """

        self._name = name

    @property
    def surface_properties(self) -> SurfacePropertySchema:
        """Gets the surface_properties of this SurfaceStateSchema.


        :return: The surface_properties of this SurfaceStateSchema.
        :rtype: SurfacePropertySchema
        """
        return self._surface_properties

    @surface_properties.setter
    def surface_properties(self, surface_properties: SurfacePropertySchema):
        """Sets the surface_properties of this SurfaceStateSchema.


        :param surface_properties: The surface_properties of this SurfaceStateSchema.
        :type surface_properties: SurfacePropertySchema
        """

        self._surface_properties = surface_properties
