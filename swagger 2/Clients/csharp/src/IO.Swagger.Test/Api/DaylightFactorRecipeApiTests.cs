/* 
 * Honeybee Server API
 *
 * A sample API definition for a honeybee server
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DaylightFactorRecipeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DaylightFactorRecipeApiTests
    {
        private DaylightFactorRecipeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DaylightFactorRecipeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DaylightFactorRecipeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DaylightFactorRecipeApi
            //Assert.IsInstanceOfType(typeof(DaylightFactorRecipeApi), instance, "instance is a DaylightFactorRecipeApi");
        }

        
        /// <summary>
        /// Test RecipeDaylightFactorGridbasedPost
        /// </summary>
        [Test]
        public void RecipeDaylightFactorGridbasedPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DaylightFactorGridBasedSchema recipe = null;
            //var response = instance.RecipeDaylightFactorGridbasedPost(recipe);
            //Assert.IsInstanceOf<InlineResponse204> (response, "response is InlineResponse204");
        }
        
        /// <summary>
        /// Test RecipeDaylightFactorGridbasedUuidPut
        /// </summary>
        [Test]
        public void RecipeDaylightFactorGridbasedUuidPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //DaylightFactorGridBasedSchema recipe = null;
            //instance.RecipeDaylightFactorGridbasedUuidPut(uuid, recipe);
            
        }
        
    }

}
