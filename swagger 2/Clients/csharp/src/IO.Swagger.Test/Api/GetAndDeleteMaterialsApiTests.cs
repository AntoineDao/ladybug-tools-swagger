/* 
 * Honeybee Server API
 *
 * A sample API definition for a honeybee server
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing GetAndDeleteMaterialsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class GetAndDeleteMaterialsApiTests
    {
        private GetAndDeleteMaterialsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new GetAndDeleteMaterialsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GetAndDeleteMaterialsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' GetAndDeleteMaterialsApi
            //Assert.IsInstanceOfType(typeof(GetAndDeleteMaterialsApi), instance, "instance is a GetAndDeleteMaterialsApi");
        }

        
        /// <summary>
        /// Test MaterialGet
        /// </summary>
        [Test]
        public void MaterialGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string materialType = null;
            //decimal? rgbTransmittance = null;
            //decimal? rgbReflectance = null;
            //var response = instance.MaterialGet(materialType, rgbTransmittance, rgbReflectance);
            //Assert.IsInstanceOf<InlineResponse2004> (response, "response is InlineResponse2004");
        }
        
        /// <summary>
        /// Test MaterialUuidDelete
        /// </summary>
        [Test]
        public void MaterialUuidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //instance.MaterialUuidDelete(uuid);
            
        }
        
        /// <summary>
        /// Test MaterialUuidGet
        /// </summary>
        [Test]
        public void MaterialUuidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //var response = instance.MaterialUuidGet(uuid);
            //Assert.IsInstanceOf<InlineResponse2005> (response, "response is InlineResponse2005");
        }
        
    }

}
