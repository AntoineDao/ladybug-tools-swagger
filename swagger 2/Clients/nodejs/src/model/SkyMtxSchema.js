/**
 * Honeybee Server API
 * A sample API definition for a honeybee server
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/HoyListSchema', 'model/WeaSchema'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./HoyListSchema'), require('./WeaSchema'));
  } else {
    // Browser globals (root is window)
    if (!root.HoneybeeServerApi) {
      root.HoneybeeServerApi = {};
    }
    root.HoneybeeServerApi.SkyMtxSchema = factory(root.HoneybeeServerApi.ApiClient, root.HoneybeeServerApi.HoyListSchema, root.HoneybeeServerApi.WeaSchema);
  }
}(this, function(ApiClient, HoyListSchema, WeaSchema) {
  'use strict';




  /**
   * The SkyMtxSchema model module.
   * @module model/SkyMtxSchema
   * @version 0.0.0
   */

  /**
   * Constructs a new <code>SkyMtxSchema</code>.
   * @alias module:model/SkyMtxSchema
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>SkyMtxSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SkyMtxSchema} obj Optional instance to populate.
   * @return {module:model/SkyMtxSchema} The populated <code>SkyMtxSchema</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('wea')) {
        obj['wea'] = WeaSchema.constructFromObject(data['wea']);
      }
      if (data.hasOwnProperty('sky_density')) {
        obj['sky_density'] = ApiClient.convertToType(data['sky_density'], 'Number');
      }
      if (data.hasOwnProperty('north')) {
        obj['north'] = ApiClient.convertToType(data['north'], 'Number');
      }
      if (data.hasOwnProperty('hoys')) {
        obj['hoys'] = HoyListSchema.constructFromObject(data['hoys']);
      }
      if (data.hasOwnProperty('mode')) {
        obj['mode'] = ApiClient.convertToType(data['mode'], 'Number');
      }
      if (data.hasOwnProperty('suffix')) {
        obj['suffix'] = ApiClient.convertToType(data['suffix'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/WeaSchema} wea
   */
  exports.prototype['wea'] = undefined;
  /**
   * 1 - Tregenza Sky, 2 - Reinhart Sky, etc. (Default - 1)
   * @member {Number} sky_density
   */
  exports.prototype['sky_density'] = undefined;
  /**
   * angle in degrees between 0-360 to indicate North
   * @member {Number} north
   */
  exports.prototype['north'] = undefined;
  /**
   * @member {module:model/HoyListSchema} hoys
   */
  exports.prototype['hoys'] = undefined;
  /**
   * sky mode
   * @member {Number} mode
   */
  exports.prototype['mode'] = undefined;
  /**
   * Suffix for the sky matrix
   * @member {String} suffix
   */
  exports.prototype['suffix'] = undefined;



  return exports;
}));


