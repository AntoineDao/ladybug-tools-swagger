/**
 * Honeybee Server API
 * A sample API definition for a honeybee server
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalysisGridSchema', 'model/HBSurfaceSchema', 'model/RadianceParameters'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AnalysisGridSchema'), require('./HBSurfaceSchema'), require('./RadianceParameters'));
  } else {
    // Browser globals (root is window)
    if (!root.HoneybeeServerApi) {
      root.HoneybeeServerApi = {};
    }
    root.HoneybeeServerApi.DaylightFactorGridBasedSchema = factory(root.HoneybeeServerApi.ApiClient, root.HoneybeeServerApi.AnalysisGridSchema, root.HoneybeeServerApi.HBSurfaceSchema, root.HoneybeeServerApi.RadianceParameters);
  }
}(this, function(ApiClient, AnalysisGridSchema, HBSurfaceSchema, RadianceParameters) {
  'use strict';




  /**
   * The DaylightFactorGridBasedSchema model module.
   * @module model/DaylightFactorGridBasedSchema
   * @version 0.0.0
   */

  /**
   * Constructs a new <code>DaylightFactorGridBasedSchema</code>.
   * @alias module:model/DaylightFactorGridBasedSchema
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>DaylightFactorGridBasedSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DaylightFactorGridBasedSchema} obj Optional instance to populate.
   * @return {module:model/DaylightFactorGridBasedSchema} The populated <code>DaylightFactorGridBasedSchema</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('analysis_grids')) {
        obj['analysis_grids'] = ApiClient.convertToType(data['analysis_grids'], [AnalysisGridSchema]);
      }
      if (data.hasOwnProperty('surfaces')) {
        obj['surfaces'] = ApiClient.convertToType(data['surfaces'], [HBSurfaceSchema]);
      }
      if (data.hasOwnProperty('rad_parameters')) {
        obj['rad_parameters'] = RadianceParameters.constructFromObject(data['rad_parameters']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/DaylightFactorGridBasedSchema.IdEnum} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:model/DaylightFactorGridBasedSchema.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {Array.<module:model/AnalysisGridSchema>} analysis_grids
   */
  exports.prototype['analysis_grids'] = undefined;
  /**
   * @member {Array.<module:model/HBSurfaceSchema>} surfaces
   */
  exports.prototype['surfaces'] = undefined;
  /**
   * @member {module:model/RadianceParameters} rad_parameters
   */
  exports.prototype['rad_parameters'] = undefined;


  /**
   * Allowed values for the <code>id</code> property.
   * @enum {String}
   * @readonly
   */
  exports.IdEnum = {
    /**
     * value: "daylight_factor"
     * @const
     */
    "factor": "daylight_factor"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "gridbased"
     * @const
     */
    "gridbased": "gridbased"  };


  return exports;
}));


