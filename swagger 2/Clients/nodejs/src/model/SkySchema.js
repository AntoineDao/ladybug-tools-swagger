/**
 * Honeybee Server API
 * A sample API definition for a honeybee server
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EpwLocationSchema'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EpwLocationSchema'));
  } else {
    // Browser globals (root is window)
    if (!root.HoneybeeServerApi) {
      root.HoneybeeServerApi = {};
    }
    root.HoneybeeServerApi.SkySchema = factory(root.HoneybeeServerApi.ApiClient, root.HoneybeeServerApi.EpwLocationSchema);
  }
}(this, function(ApiClient, EpwLocationSchema) {
  'use strict';




  /**
   * The SkySchema model module.
   * @module model/SkySchema
   * @version 0.0.0
   */

  /**
   * Constructs a new <code>SkySchema</code>.
   * @alias module:model/SkySchema
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>SkySchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SkySchema} obj Optional instance to populate.
   * @return {module:model/SkySchema} The populated <code>SkySchema</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('location')) {
        obj['location'] = EpwLocationSchema.constructFromObject(data['location']);
      }
      if (data.hasOwnProperty('hour')) {
        obj['hour'] = ApiClient.convertToType(data['hour'], 'Number');
      }
      if (data.hasOwnProperty('day')) {
        obj['day'] = ApiClient.convertToType(data['day'], 'Number');
      }
      if (data.hasOwnProperty('month')) {
        obj['month'] = ApiClient.convertToType(data['month'], 'Number');
      }
      if (data.hasOwnProperty('north')) {
        obj['north'] = ApiClient.convertToType(data['north'], 'Number');
      }
      if (data.hasOwnProperty('sky_type')) {
        obj['sky_type'] = ApiClient.convertToType(data['sky_type'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/EpwLocationSchema} location
   */
  exports.prototype['location'] = undefined;
  /**
   * hour of the day - minvalue 0 and max value 23
   * @member {Number} hour
   */
  exports.prototype['hour'] = undefined;
  /**
   * day of the month - minvalue 1 and max value 31
   * @member {Number} day
   */
  exports.prototype['day'] = undefined;
  /**
   * month of the year - minvalue 1 and max value 12
   * @member {Number} month
   */
  exports.prototype['month'] = undefined;
  /**
   * angle in degrees between 0-360 to indicate North
   * @member {Number} north
   */
  exports.prototype['north'] = undefined;
  /**
   * 0 - Sunny with sun, 1 - sunny without sun, 2 - intermediate with sun, 3 - intermediate without sun, 4 - cloudy sky, 5 - uniform sky
   * @member {Number} sky_type
   */
  exports.prototype['sky_type'] = undefined;



  return exports;
}));


