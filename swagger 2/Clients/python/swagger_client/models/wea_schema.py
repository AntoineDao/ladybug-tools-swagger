# coding: utf-8

"""
    Honeybee Server API

    A sample API definition for a honeybee server  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.data_collection import DataCollection  # noqa: F401,E501
from swagger_client.models.location import Location  # noqa: F401,E501


class WeaSchema(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'header': 'list[str]',
        'location': 'Location',
        'direct_normal_radiation': 'DataCollection',
        'diffuse_horizontal_radiation': 'DataCollection'
    }

    attribute_map = {
        'header': 'header',
        'location': 'location',
        'direct_normal_radiation': 'direct_normal_radiation',
        'diffuse_horizontal_radiation': 'diffuse_horizontal_radiation'
    }

    def __init__(self, header=None, location=None, direct_normal_radiation=None, diffuse_horizontal_radiation=None):  # noqa: E501
        """WeaSchema - a model defined in Swagger"""  # noqa: E501

        self._header = None
        self._location = None
        self._direct_normal_radiation = None
        self._diffuse_horizontal_radiation = None
        self.discriminator = None

        self.header = header
        self.location = location
        if direct_normal_radiation is not None:
            self.direct_normal_radiation = direct_normal_radiation
        if diffuse_horizontal_radiation is not None:
            self.diffuse_horizontal_radiation = diffuse_horizontal_radiation

    @property
    def header(self):
        """Gets the header of this WeaSchema.  # noqa: E501


        :return: The header of this WeaSchema.  # noqa: E501
        :rtype: list[str]
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this WeaSchema.


        :param header: The header of this WeaSchema.  # noqa: E501
        :type: list[str]
        """
        if header is None:
            raise ValueError("Invalid value for `header`, must not be `None`")  # noqa: E501

        self._header = header

    @property
    def location(self):
        """Gets the location of this WeaSchema.  # noqa: E501


        :return: The location of this WeaSchema.  # noqa: E501
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this WeaSchema.


        :param location: The location of this WeaSchema.  # noqa: E501
        :type: Location
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")  # noqa: E501

        self._location = location

    @property
    def direct_normal_radiation(self):
        """Gets the direct_normal_radiation of this WeaSchema.  # noqa: E501


        :return: The direct_normal_radiation of this WeaSchema.  # noqa: E501
        :rtype: DataCollection
        """
        return self._direct_normal_radiation

    @direct_normal_radiation.setter
    def direct_normal_radiation(self, direct_normal_radiation):
        """Sets the direct_normal_radiation of this WeaSchema.


        :param direct_normal_radiation: The direct_normal_radiation of this WeaSchema.  # noqa: E501
        :type: DataCollection
        """

        self._direct_normal_radiation = direct_normal_radiation

    @property
    def diffuse_horizontal_radiation(self):
        """Gets the diffuse_horizontal_radiation of this WeaSchema.  # noqa: E501


        :return: The diffuse_horizontal_radiation of this WeaSchema.  # noqa: E501
        :rtype: DataCollection
        """
        return self._diffuse_horizontal_radiation

    @diffuse_horizontal_radiation.setter
    def diffuse_horizontal_radiation(self, diffuse_horizontal_radiation):
        """Sets the diffuse_horizontal_radiation of this WeaSchema.


        :param diffuse_horizontal_radiation: The diffuse_horizontal_radiation of this WeaSchema.  # noqa: E501
        :type: DataCollection
        """

        self._diffuse_horizontal_radiation = diffuse_horizontal_radiation

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WeaSchema):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
